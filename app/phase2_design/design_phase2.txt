For each class we will be using the following data structures to store their attributes:

Patient:
	-int: Age (incremented once per birthday)
	-String: Name, Health Card Number (Health Card Number is a String because there can be letters)
	-Time object: Arrival Time, Birth Date
	-ArrayList of Data
		--We chose to store it in a class that implements from List (to allow for order), but we had to choose which exact class.
		--We chose ArrayList because it has the properties of being resizable and being orderable which is necessary for the following reasons: 
			---We will be adding another data point (retaining old records) to each specific type of data, so this list must be resizable. 
	        ---We want this list to be ordered so that we can order the list by the date which is necessary to organize health records. 
		--Data includes vital signs and text symptom descriptions
	-ArrayList of Date Objects: Doctor Check-up History 
		--We chose ArrayList because we needed a resizable data structure as we add more dates. Order is also important, as this allows us to easily access the dates from most to least recent.
		--No elements in Doctor Check-up History = not yet seen by doctor (This allows for quick checking of whether patient has been seen by a doctor without a boolean)
	
Data:
	-abstract class
	-contains time recorded
	-after instantiation, Data object passed to Patient object to be saved to that patient
	
Vital signs (inherits date):
	-int: Systolic Blood Pressure, Diastolic Blood Pressure, Heart Rate, Urgency Number
	-Float: Temperature
	-Time object: Time Recorded (inherited from data)
	
Symptoms (inherits data):
	-Needed to associate time to descriptions; allows use of ArrayList for maintenance of ordering and resizing for addition of new Symptom descriptions
	-String: text description
	-Time object: Time Recorded (inherited from data)

Urgency (inherits data):
	-needed to associate time with urgency level while enabling safe use of an ArrayList to maintain order by date and resizability.
	-int: urgency
	-update called every time new Vital Signs added or age updated

	
Nurse has no attributes. 

Patient System:
	-ArrayList of Patient Objects 
		--We chose to store it in a class that implements from List (to allow for order), but we had to choose which exact Class.
		--We chose ArrayList because it has the properties of being resizable and being orderable which is necessary for the following reasons: 
			---We require order so that we can sort by Check-In Time or by Urgency Number.
			---It needs to be resizable because we will be adding new patients as they check in. 
	
	
Time (Inherits from Date):
	-int: year, month, day, hour, minute
	-Allows for fast sorting of dates as well as easy conversion to readable string format

To store all of this information, the system will save it in a .txt file with the following format:
	-First there is a header "Patient:" which is followed by the entry of each patient 
		--Every patient will have an entry with their Name, Birth Date, and Health Card Number, as well as Arrival Time on separate lines.
		--After that will be the header "Health Record" which is followed by that Patient's Vital Signs record, which comprises of every vital sign update that the patient has had.
			---Each check up will have be separated by the header "Check Up" followed by the Vital Signs class' attributes.
		--After the Vital Signs, there will be the header "Symptom Descriptions:" followed by a time (dd/mm/yyyy hh:mm) on its own line, then each symptom description of the patient at a given time on a new line. 
		--After the Symptom Descriptions, there will be the header "Doctor Check-Up History:" followed by each date where the patient has seen a doctor on a new line. 

	-Every patient is separated by a delimiter of two underscores,"__", located after the previous patient's last check-up. 
